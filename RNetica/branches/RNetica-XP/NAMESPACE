import(methods)
import(utils)
importFrom("utils","getFromNamespace")
importFrom("grDevices", "col2rgb")
importFrom("stats", "runif")
importFrom("R.utils","tempvar")


export(NeticaSession)
exportClasses(NeticaSession)
exportMethods(is.active,startSession,stopSession)

export(StartNetica, StopNetica, NeticaVersion,
       ReportErrors, ClearAllErrors,
       getDefaultSession,startSession,stopSession,
       CreateNetwork, DeleteNetwork,
       is.active, is.IDname, as.IDname, is.NeticaBN,
       GetNthNetwork, GetNamedNetworks, CheckNamedNetworks,
       CopyNetworks)

exportClasses(NeticaBN)
exportMethods(print,Compare,toString,as.character,is.element)
export(WriteNetworks, ReadNetworks,
       GetNetworkFileName,
       NetworkName, "NetworkName<-",
       NetworkTitle, "NetworkTitle<-",
       NetworkComment, "NetworkComment<-",
       GetNetworkAutoUpdate, SetNetworkAutoUpdate, WithoutAutoUpdate,
       NetworkUserField, "NetworkUserField<-",
       NetworkUserObj, "NetworkUserObj<-",
       NetworkAllUserFields,
       dputToString, dgetFromString
#       NetworkUndo, NetworkRedo  # These don't do anything sensible.
       )

exportClasses(NeticaNode)
export(
  NewDiscreteNode, NewContinuousNode, DeleteNodes,
  CopyNodes,
  NodeNet, NodeName, "NodeName<-",
  is.NeticaNode,
  is.discrete, is.continuous,
  NetworkAllNodes, NetworkFindNode,
  NodeTitle, "NodeTitle<-",
  NodeDescription, "NodeDescription<-",
  NodeUserField, "NodeUserField<-", NodeAllUserFields,
  NodeUserObj, "NodeUserObj<-",
  NodeKind, "NodeKind<-",
  NodeVisStyle, "NodeVisStyle<-",
  NodeVisPos, "NodeVisPos<-"
  )

export(
  NodeStates, NodeNumStates, "NodeStates<-",
  NodeStateTitles, "NodeStateTitles<-",
  NodeStateComments, "NodeStateComments<-",
  NodeLevels, "NodeLevels<-", ParentStates, ParentNames
  )

exportClasses(CliqueNode)
exportMethods("[","[[","[<-")
 export(
   AddLink, DeleteLink, ReverseLink,
   NodeParents, "NodeParents<-", NodeChildren,
   AbsorbNodes, MakeCliqueNode, is.CliqueNode,
   GetClique,
   is.NodeRelated, GetRelatedNodes,
   NodeInputNames, "NodeInputNames<-",
   AdjoinNetwork, NetworkFootprint
   )

export(
  NodeProbs, "NodeProbs<-", normalize.matrix,
  normalize, normalize.array, normalize.data.frame,
  is.CPA, as.CPA, normalize.CPA, normalize.default,
  as.CPF, is.CPF, normalize.CPF, EVERY_STATE,
  IsNodeDeterministic, HasNodeTable,
  DeleteNodeTable
   )

export(
   CompileNetwork, UncompileNetwork, is.NetworkCompiled,
   EliminationOrder, "EliminationOrder<-",
   NetworkCompiledSize, JunctionTreeReport,
   NodeFinding, "NodeFinding<-", EnterNegativeFinding,
   RetractNetFindings, RetractNodeFinding, EnterFindings,
   NodeBeliefs, IsBeliefUpdated,
   NodeLikelihood, "NodeLikelihood<-",
   JointProbability, FindingsProbability, MostProbableConfig
 )

export (
    NodeSets, "NodeSets<-",
    AddNodeToSets, RemoveNodeFromSets,
    NetworkNodeSets, NetworkSetPriority,
    NetworkNodesInSet, "NetworkNodesInSet<-",
    NetworkNodeSetColor
 )

exportClasses(CaseStream,FileCaseStream,MemoryCaseStream)
export(CaseFileDelimiter,CaseFileMissingCode,
       OpenCaseStream, CloseCaseStream,
       WithOpenCaseStream,
       is.NeticaCaseStream, isCaseStreamOpen,
       CaseMemoryStream, CaseFileStream,
       is.MemoryCaseStream, is.CaseFileStream,
       getCaseStreamPath,getCaseStreamLastId,
       getCaseStreamPos,getCaseStreamLastFreq,
       getCaseStreamDataFrameName,
       MemoryStreamContents,"MemoryStreamContents<-",
       read.CaseFile,write.CaseFile,
       WriteFindings,ReadFindings,
       NodeExperience, "NodeExperience<-",
       FadeCPT, LearnFindings,
       LearnCases, LearnCPTs
       )

export(NodeValue, "NodeValue<-",
       EnterGaussianFinding, EnterIntervalFinding,
       NodeExpectedValue, NodeExpectedUtils,
       CalcNodeState, CalcNodeValue,
       MutualInfo, VarianceOfReal,
       NodeEquation, "NodeEquation<-",EquationToTable,
       woe, ewoe
       )

exportClasses(NeticaRNG)
export(GenerateRandomCase, NetworkSetRNG, WithRNG, isNeticaRNGActive,
       is.NeticaRNG, FreeNeticaRNG, NewNeticaRNG)

useDynLib(RNeticaXR)
