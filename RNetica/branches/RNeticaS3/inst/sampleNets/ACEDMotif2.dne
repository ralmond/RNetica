// ~->[DNET-1]->~

// File created by ZapataD at ETSTech using Netica 2.17 on Mar 27, 2006 at 16:16:50.

bnet ACEDMotif2 {
autoupdate = TRUE;
whenchanged = 1143493513;

visual V1 {
	defdispform = BELIEFBARS;
	nodelabeling = TITLE;
	NodeMaxNumEntries = 50;
	nodefont = font {shape= "Arial"; size= 10;};
	linkfont = font {shape= "Arial"; size= 9;};
	windowposn = (4, 3, 1005, 670);
	resolution = 72;
	drawingbounds = (1104, 728);
	showpagebreaks = FALSE;
	usegrid = TRUE;
	gridspace = (6, 6);
	PrinterSetting A {
		margins = (1270, 1270, 1270, 1270);
		landscape = FALSE;
		magnify = 1;
		};
	};

node SolveGeometricProblems {
	kind = NATURE;
	discrete = TRUE;
	states = (High, Medium, Low);
	parents = ();
	probs = 
		// High         Medium       Low          
		  (0.1532,      0.2784,      0.5684);
	whenchanged = 1143493513;
	belief = (0.1532, 0.2784, 0.5684);
	visual V1 {
		center = (354, 42);
		height = 1;
		};
	};

node CommonRatio {
	kind = NATURE;
	discrete = TRUE;
	states = (High, Medium, Low);
	parents = (SolveGeometricProblems);
	probs = 
		// High         Medium       Low            // SolveGeometricProblems 
		 ((1,           0,           0),            // High                   
		  (0.963,       0.036,       9.999424e-4),  // Medium                 
		  (0.567,       0.379,       0.05399996));  // Low                    ;
	numcases = 1;
	whenchanged = 2147483647;
	belief = (0.743582, 0.225446, 0.030972);
	visual V1 {
		center = (114, 132);
		height = 4;
		link 1 {
			path = ((283, 69), (177, 109));
			};
		};
	};

node VisualGeometric {
	kind = NATURE;
	discrete = TRUE;
	states = (High, Medium, Low);
	parents = (SolveGeometricProblems);
	probs = 
		// High         Medium       Low            // SolveGeometricProblems 
		 ((0.749,       0.211,       0.04),         // High                   
		  (0.295,       0.41,        0.295),        // Medium                 
		  (0.04,        0.211,       0.749));       // Low                    ;
	numcases = 1;
	whenchanged = 2147483647;
	belief = (0.219611, 0.266402, 0.513988);
	visual V1 {
		center = (672, 90);
		height = 6;
		link 1 {
			path = ((427, 53), (609, 81));
			};
		};
	};

node TableGeometric {
	kind = NATURE;
	discrete = TRUE;
	states = (High, Medium, Low);
	parents = (SolveGeometricProblems);
	probs = 
		// High         Medium       Low            // SolveGeometricProblems 
		 ((0.713,       0.216,       0.071),        // High                   
		  (0.326,       0.348,       0.326),        // Medium                 
		  (0.071,       0.216,       0.713));       // Low                    ;
	numcases = 
		                 // SolveGeometricProblems 
		  (1,            // High                   
		   1,            // Medium                 
		   1);           // Low                    ;
	whenchanged = 2147483647;
	belief = (0.240346, 0.252749, 0.506905);
	visual V1 {
		center = (588, 168);
		height = 14;
		};
	};

node InduceRulesGeometric {
	kind = NATURE;
	discrete = TRUE;
	states = (High, Medium, Low);
	parents = (SolveGeometricProblems);
	probs = 
		// High         Medium       Low            // SolveGeometricProblems 
		 ((0.395,       0.396,       0.209),        // High                   
		  (0.07,        0.275,       0.655),        // Medium                 
		  (0.004,       0.05,        0.946));       // Low                    ;
	numcases = 1;
	whenchanged = 2147483647;
	belief = (0.0822756, 0.165647, 0.752077);
	visual V1 {
		center = (342, 216);
		height = 5;
		link 1 {
			path = ((352, 69), (343, 189));
			};
		};
	};

node CommonRatioMediumTask {
	kind = NATURE;
	discrete = TRUE;
	states = (True, False);
	inputs = (theta);
	parents = (CommonRatio);
	probs = 
		// True         False          // theta  
		 ((0.7246,      0.2754),       // High   
		  (0.5,         0.5),          // Medium 
		  (0.2754,      0.7246));      // Low    ;
	title = "Common Ratio Medium Task";
	comment = "Is response \"correct\", Easy task, three level parent.  IRT difficulty 0.";
	whenchanged = 1143493501;
	belief = (0.660052, 0.339948);
	visual V1 {
		center = (104, 516);
		height = 8;
		};
	};

node VisualMediumTask {
	kind = NATURE;
	discrete = TRUE;
	states = (True, False);
	inputs = (theta);
	parents = (VisualGeometric);
	probs = 
		// True         False          // theta  
		 ((0.7246,      0.2754),       // High   
		  (0.5,         0.5),          // Medium 
		  (0.2754,      0.7246));      // Low    ;
	title = "Visual Medium Task";
	comment = "Is response \"correct\", Easy task, three level parent.  IRT difficulty 0.";
	whenchanged = 1143484340;
	belief = (0.433883, 0.566117);
	visual V1 {
		center = (762, 408);
		height = 9;
		};
	};

node TableGeometricMediumTask {
	kind = NATURE;
	discrete = TRUE;
	states = (True, False);
	inputs = (theta);
	parents = (TableGeometric);
	probs = 
		// True         False          // theta  
		 ((0.7246,      0.2754),       // High   
		  (0.5,         0.5),          // Medium 
		  (0.2754,      0.7246));      // Low    ;
	title = "Table Geometric Medium Task";
	comment = "Is response \"correct\", Easy task, three level parent.  IRT difficulty 0.";
	whenchanged = 1143484366;
	belief = (0.440131, 0.559869);
	visual V1 {
		center = (732, 498);
		height = 11;
		};
	};

node AlgebraRuleGeometric {
	kind = NATURE;
	discrete = TRUE;
	states = (High, Medium, Low);
	parents = (InduceRulesGeometric);
	probs = 
		// High         Medium       Low            // InduceRulesGeometric 
		 ((0.1589416,   0.4232342,   0.4178242),    // High                 
		  (0.009290083, 0.116352,    0.8743579),    // Medium               
		  (1.04e-4,     0.006073,    0.993823));    // Low                  ;
	whenchanged = 2147483647;
	belief = (0.0146941, 0.0586626, 0.926643);
	visual V1 {
		center = (306, 294);
		height = 3;
		};
	};

node VerbalRuleGeometric {
	kind = NATURE;
	discrete = TRUE;
	states = (High, Medium, Low);
	parents = (InduceRulesGeometric);
	probs = 
		// High         Medium       Low            // InduceRulesGeometric 
		 ((0.8909276,   0.1084034,   6.690208e-4),  // High                 
		  (0.1615161,   0.6769677,   0.1615161),    // Medium               
		  (6.690208e-4, 0.1084034,   0.8909276));   // Low                  ;
	numcases = 1;
	whenchanged = 2147483647;
	belief = (0.100559, 0.202584, 0.696856);
	visual V1 {
		center = (534, 246);
		height = 15;
		};
	};

node ExplicitGeometric {
	kind = NATURE;
	discrete = TRUE;
	states = (High, Medium, Low);
	parents = (AlgebraRuleGeometric);
	probs = 
		// High         Medium       Low            // AlgebraRuleGeometric 
		 ((0.2582583,   0.4534535,   0.2882883),    // High                 
		  (0.02250225,  0.190119,    0.7873787),    // Medium               
		  (3.900429e-4, 0.01530168,  0.9843083));   // Low                  ;
	numcases = 1;
	whenchanged = 2147483647;
	belief = (0.00547635, 0.0319952, 0.962528);
	visual V1 {
		center = (210, 372);
		height = 7;
		};
	};

node RecursiveRuleGeometric {
	kind = NATURE;
	discrete = TRUE;
	states = (High, Medium, Low);
	parents = (AlgebraRuleGeometric);
	probs = 
		// High         Medium       Low            // AlgebraRuleGeometric 
		 ((0.9641929,   0.0345069,   0.00130026),   // High                 
		  (0.6726,      0.2783,      0.0491),       // Medium               
		  (0.182,       0.4354,      0.3826));      // Low                  ;
	numcases = 1;
	whenchanged = 2147483647;
	belief = (0.222273, 0.420293, 0.357433);
	visual V1 {
		center = (420, 366);
		height = 2;
		link 1 {
			path = ((349, 321), (378, 339));
			};
		};
	};

node VerbalRuleMediumTask {
	kind = NATURE;
	discrete = TRUE;
	states = (True, False);
	inputs = (theta);
	parents = (VerbalRuleGeometric);
	probs = 
		// True         False          // theta  
		 ((0.7246,      0.2754),       // High   
		  (0.5,         0.5),          // Medium 
		  (0.2754,      0.7246));      // Low    ;
	title = "Verbal Rule Medium Task";
	comment = "Is response \"correct\", Easy task, three level parent.  IRT difficulty 0.";
	whenchanged = 1143493460;
	belief = (0.366072, 0.633928);
	visual V1 {
		center = (576, 576);
		height = 12;
		};
	};

node ExplicitGeometricMediumTask {
	kind = NATURE;
	discrete = TRUE;
	states = (True, False);
	inputs = (theta);
	parents = (ExplicitGeometric);
	probs = 
		// True         False          // theta  
		 ((0.7246,      0.2754),       // High   
		  (0.5,         0.5),          // Medium 
		  (0.2754,      0.7246));      // Low    ;
	title = "Explicit Geometric Medium Task";
	comment = "Is response \"correct\", Easy task, three level parent.  IRT difficulty 0.";
	whenchanged = 1143493488;
	belief = (0.285046, 0.714954);
	visual V1 {
		center = (252, 582);
		height = 13;
		};
	};

node RecursiveRuleMediumTask {
	kind = NATURE;
	discrete = TRUE;
	states = (True, False);
	inputs = (theta);
	parents = (RecursiveRuleGeometric);
	probs = 
		// True         False          // theta  
		 ((0.7246,      0.2754),       // High   
		  (0.5,         0.5),          // Medium 
		  (0.2754,      0.7246));      // Low    ;
	title = "Recursive Rule Medium Task";
	comment = "Is response \"correct\", Easy task, three level parent.  IRT difficulty 0.";
	whenchanged = 1143493472;
	belief = (0.469643, 0.530357);
	visual V1 {
		center = (426, 504);
		height = 10;
		};
	};
ElimOrder = (CommonRatioMediumTask, VisualMediumTask, TableGeometricMediumTask, VerbalRuleMediumTask, ExplicitGeometricMediumTask, RecursiveRuleMediumTask, CommonRatio, VisualGeometric, TableGeometric, SolveGeometricProblems, VerbalRuleGeometric, InduceRulesGeometric, ExplicitGeometric, AlgebraRuleGeometric, RecursiveRuleGeometric);
};
