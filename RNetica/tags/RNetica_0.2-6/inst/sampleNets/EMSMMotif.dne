// ~->[DNET-1]->~

// File created by an unlicensed user using Netica 5.04 on 11/03/2012 at 03:44:39 PM.

bnet EMSMMotif {
autoupdate = TRUE;
whenchanged = 1351971829;

visual V1 {
	defdispform = BELIEFBARS;
	nodelabeling = TITLE;
	NodeMaxNumEntries = 50;
	nodefont = font {shape= "Arial"; size= 10;};
	linkfont = font {shape= "Arial"; size= 9;};
	windowposn = (70, 23, 992, 479);
	resolution = 72;
	drawingbounds = (1104, 728);
	showpagebreaks = FALSE;
	usegrid = TRUE;
	gridspace = (6, 6);
	NodeSet Node {BuiltIn = 1; Color = 0x00E1E1E1;};
	NodeSet Nature {BuiltIn = 1; Color = 0x00F8EED2;};
	NodeSet Deterministic {BuiltIn = 1; Color = 0x00D3CAA6;};
	NodeSet Finding {BuiltIn = 1; Color = 0x00C8C8C8;};
	NodeSet Constant {BuiltIn = 1; Color = 0x00FFFFFF;};
	NodeSet ConstantValue {BuiltIn = 1; Color = 0x00FFFFB4;};
	NodeSet Utility {BuiltIn = 1; Color = 0x00FFBDBD;};
	NodeSet Decision {BuiltIn = 1; Color = 0x00DEE8FF;};
	NodeSet Documentation {BuiltIn = 1; Color = 0x00F0FAFA;};
	NodeSet Title {BuiltIn = 1; Color = 0x00FFFFFF;};
	NodeSet Observable {Color = 0x0080FF80;};
	NodeSet Proficiency {Disabled = 1; Color = 0x00C8C8C8;};
	NodeSet System {Disabled = 1; Color = 0x00C8C8C8;};
	NodeSet Task1a {Disabled = 1; Color = 0x00C8C8C8;};
	NodeSet Task1b {Disabled = 1; Color = 0x00C8C8C8;};
	NodeSet Task2a {Disabled = 1; Color = 0x00C8C8C8;};
	NodeSet Task2b {Disabled = 1; Color = 0x00C8C8C8;};
	PrinterSetting A {
		margins = (1270, 1270, 1270, 1270);
		};
	};

node Skill1 {
	kind = NATURE;
	discrete = TRUE;
	chance = CHANCE;
	states = (High, Medium, Low);
	parents = ();
	probs = 
		// High         Medium       Low          
		  (0.1,         0.3,         0.6);
	whenchanged = 2147483647;
	visual V1 {
		center = (86, 54);
		height = 2;
		};
	};

node Skill2 {
	kind = NATURE;
	discrete = TRUE;
	chance = CHANCE;
	states = (High, Low);
	parents = ();
	probs = 
		// High         Low          
		  (0.3,         0.7);
	whenchanged = 2147483647;
	visual V1 {
		center = (258, 48);
		height = 1;
		};
	};

node Obs1a1 {
	kind = NATURE;
	discrete = TRUE;
	chance = CHANCE;
	states = (Right, Wrong);
	parents = (Skill1, Skill2);
	probs = 
		// Right        Wrong         // Skill1 Skill2 
		  (0.9,         0.1,          // High   High   
		   0.7,         0.3,          // High   Low    
		   0.7,         0.3,          // Medium High   
		   0.6,         0.4,          // Medium Low    
		   0.6,         0.4,          // Low    High   
		   0.4,         0.6);         // Low    Low    ;
	numcases = 1;
	whenchanged = 2147483647;
	visual V1 {
		center = (82, 198);
		height = 3;
		link 1 {
			path = ((81, 87), (78, 172));
			};
		};
	};

node Obs1b1 {
	kind = NATURE;
	discrete = TRUE;
	chance = CHANCE;
	states = (Right, Wrong);
	inputs = (Skill1, Skill2);
	parents = (Skill1, Skill2);
	probs = 
		// Right        Wrong         // Skill1 Skill2 
		  (0.95,        0.05,         // High   High   
		   0.8,         0.2,          // High   Low    
		   0.9,         0.1,          // Medium High   
		   0.6,         0.4,          // Medium Low    
		   0.6,         0.4,          // Low    High   
		   0.2,         0.8);         // Low    Low    ;
	whenchanged = 1351556884;
	visual V1 {
		center = (114, 294);
		height = 8;
		};
	};

node Obs1a2 {
	kind = NATURE;
	discrete = TRUE;
	chance = CHANCE;
	states = (Right, Wrong);
	parents = (Obs1a1, Skill2);
	probs = 
		// Right        Wrong         // Obs1a1 Skill2 
		  (0.8,         0.2,          // Right  High   
		   0.6,         0.4,          // Right  Low    
		   0.1,         0.9,          // Wrong  High   
		   0.1,         0.9);         // Wrong  Low    ;
	whenchanged = 2147483647;
	visual V1 {
		center = (270, 180);
		height = 7;
		};
	};

node Obs1b2 {
	kind = NATURE;
	discrete = TRUE;
	chance = CHANCE;
	states = (Right, Wrong);
	inputs = (, Skill2);
	parents = (Obs1b1, Skill2);
	probs = 
		// Right        Wrong         // Obs1b1 Skill2 
		  (0.7,         0.3,          // Right  High   
		   0.6,         0.4,          // Right  Low    
		   0.2,         0.8,          // Wrong  High   
		   0.2,         0.8);         // Wrong  Low    ;
	whenchanged = 1351556880;
	visual V1 {
		center = (318, 288);
		height = 9;
		};
	};

node Skill3 {
	kind = NATURE;
	discrete = TRUE;
	chance = CHANCE;
	states = (High, Low);
	parents = (Skill2);
	probs = 
		// High         Low           // Skill2 
		  (0.8,         0.2,          // High   
		   0.4,         0.6);         // Low    ;
	whenchanged = 2147483647;
	visual V1 {
		center = (474, 36);
		height = 4;
		};
	};

node Obs2a {
	kind = NATURE;
	discrete = TRUE;
	chance = CHANCE;
	states = (Right, Half, Wrong);
	parents = (Skill2, Skill3);
	probs = 
		// Right        Half         Wrong         // Skill2 Skill3 
		  (0.6,         0.3,         0.1,          // High   High   
		   0.4,         0.3,         0.3,          // High   Low    
		   0.2,         0.4,         0.4,          // Low    High   
		   0.2,         0.3,         0.5);         // Low    Low    ;
	whenchanged = 2147483647;
	visual V1 {
		center = (426, 162);
		height = 6;
		link 2 {
			path = ((464, 62), (438, 129));
			};
		};
	};

node Obs2b {
	kind = NATURE;
	discrete = TRUE;
	chance = CHANCE;
	states = (Right, Half, Wrong);
	inputs = (Skill2, Skill3);
	parents = (Skill2, Skill3);
	probs = 
		// Right        Half         Wrong         // Skill2 Skill3 
		  (0.85,        0.1,         0.05,         // High   High   
		   0.7,         0.2,         0.1,          // High   Low    
		   0.7,         0.2,         0.1,          // Low    High   
		   0.3,         0.4,         0.3);         // Low    Low    ;
	whenchanged = 2147483647;
	visual V1 {
		center = (504, 264);
		height = 5;
		};
	};
NodeSet Observable {Nodes = (Obs1a1, Obs1a2, Obs1b1, Obs1b2, Obs2a, Obs2b);};
NodeSet Proficiency {Nodes = (Skill1, Skill2, Skill3);};
NodeSet System {Nodes = (Skill1, Skill2, Skill3);};
NodeSet Task1a {Nodes = (Obs1a1, Obs1a2);};
NodeSet Task1b {Nodes = (Obs1b1, Obs1b2);};
NodeSet Task2a {Nodes = (Obs2a);};
NodeSet Task2b {Nodes = (Obs2b);};
};
