// ~->[DNET-1]->~// File created by an unlicensed user using Netica on Mar 10 2006 at 12:55:36.bnet GeometricPM {whenchanged = 3224839650;visual V1 {	defdispform = BELIEFBARS;	nodelabeling = TITLE;	nodefont = font {shape= "Geneva"; size= 10;};	linkfont = font {shape= "Geneva"; size= 9;};	commentfont = font {shape= "Geneva"; size= 10;};	windowposn = (368, 195, 1229, 809);	resolution = 72;	drawingbounds = (1104, 728);	showpagebreaks = FALSE;	usegrid = TRUE;	gridspace = (6, 6);	};node SolveSequenceProblems {	kind = NATURE;	discrete = TRUE;	chance = CHANCE;	states = (High, Medium, Low);	parents = ();	probs = 		// High          Medium        Low           		  (0.2,          0.5,          0.3);	whenchanged = 3224768071;	visual V1 {		center = (96, 42);		height = 2;		};	};node SolveGeometricProblems {	kind = NATURE;	discrete = TRUE;	chance = CHANCE;	states = (High, Medium, Low);	parents = (SolveSequenceProblems);	probs = 		// High          Medium        Low             // SolveSequenceProblems 		 ((0.52,         0.376,        0.104),         // High                  		  (0.096,        0.365,        0.539),         // Medium                		  (0.004,        0.069,        0.927));        // Low                   ;	whenchanged = 3224768137;	visual V1 {		center = (354, 42);		height = 1;		};	};node CommonRatio {	kind = NATURE;	discrete = TRUE;	chance = CHANCE;	states = (High, Medium, Low);	parents = (SolveGeometricProblems);	probs = 		// High          Medium        Low             // SolveGeometricProblems 		 ((1,            0,            0),             // High                   		  (0.96300006,   0.036,        0.00099994242), // Medium                 		  (0.567,        0.379,        0.05399996));   // Low                    ;	numcases = 1;	whenchanged = 3224766501;	visual V1 {		center = (114, 132);		height = 6;		link 1 {			path = ((283, 69), (177, 109));			};		};	};node ExamplesGeometric {	kind = NATURE;	discrete = TRUE;	chance = CHANCE;	states = (High, Medium, Low);	parents = (SolveGeometricProblems);	probs = 		// High          Medium        Low             // SolveGeometricProblems 		 ((0.518,        0.351,        0.131),         // High                   		  (0.122,        0.344,        0.53400004),    // Medium                 		  (0.0090000005, 0.089,        0.902));        // Low                    ;	numcases = 1;	whenchanged = 3224767319;	visual V1 {		center = (198, 192);		height = 7;		};	};node ExtendGeometric {	kind = NATURE;	discrete = TRUE;	chance = CHANCE;	states = (High, Medium, Low);	parents = (SolveGeometricProblems);	probs = 		// High          Medium        Low             // SolveGeometricProblems 		 ((1,            0,            0),             // High                   		  (0.96300006,   0.036,        0.001),         // Medium                 		  (0.567,        0.379,        0.054));        // Low                    ;	whenchanged = 3224767524;	visual V1 {		center = (396, 138);		height = 12;		link 1 {			path = ((366, 69), (385, 111));			};		};	};node InduceRulesGeometric {	kind = NATURE;	discrete = TRUE;	chance = CHANCE;	states = (High, Medium, Low);	parents = (SolveGeometricProblems);	probs = 		// High          Medium        Low             // SolveGeometricProblems 		 ((0.395,        0.396,        0.209),         // High                   		  (0.07,         0.275,        0.655),         // Medium                 		  (0.004,        0.05,         0.946));        // Low                    ;	numcases = 1;	whenchanged = 3224767640;	visual V1 {		center = (342, 216);		height = 8;		link 1 {			path = ((352, 69), (343, 189));			};		};	};node ModelGeometric {	kind = NATURE;	discrete = TRUE;	chance = CHANCE;	states = (High, Medium, Low);	parents = (SolveGeometricProblems);	probs = 		// High          Medium        Low             // SolveGeometricProblems 		 ((0.281,        0.41,         0.309),         // High                   		  (0.037,        0.201,        0.76199996),    // Medium                 		  (0.001,        0.026,        0.973));        // Low                    ;	numcases = 1;	whenchanged = 3224767776;	visual V1 {		center = (534, 102);		height = 11;		};	};node TableGeometric {	kind = NATURE;	discrete = TRUE;	chance = CHANCE;	states = (High, Medium, Low);	parents = (SolveGeometricProblems);	probs = 		// High          Medium        Low             // SolveGeometricProblems 		 ((0.713,        0.216,        0.070999995),   // High                   		  (0.326,        0.348,        0.326),         // Medium                 		  (0.070999995,  0.216,        0.713));        // Low                    ;	numcases = 		                  // SolveGeometricProblems 		  (1,             // High                   		   0.99999994,    // Medium                 		   1);            // Low                    ;	whenchanged = 3224768239;	visual V1 {		center = (588, 186);		height = 9;		link 1 {			path = ((398, 69), (545, 159));			};		};	};node VisualGeometric {	kind = NATURE;	discrete = TRUE;	chance = CHANCE;	states = (High, Medium, Low);	parents = (SolveGeometricProblems);	probs = 		// High          Medium        Low             // SolveGeometricProblems 		 ((0.749,        0.211,        0.04),          // High                   		  (0.295,        0.41,         0.295),         // Medium                 		  (0.04,         0.211,        0.749));        // Low                    ;	numcases = 1;	whenchanged = 3224768467;	visual V1 {		center = (672, 90);		height = 10;		link 1 {			path = ((427, 53), (609, 81));			};		};	};node AlgebraRuleGeometric {	kind = NATURE;	discrete = TRUE;	chance = CHANCE;	states = (High, Medium, Low);	parents = (InduceRulesGeometric);	probs = 		// High          Medium        Low             // InduceRulesGeometric 		 ((0.1589416,    0.42323422,   0.41782418),    // High                 		  (0.0092900833, 0.11635204,   0.87435788),    // Medium               		  (0.000104,     0.006073,     0.99382299));   // Low                  ;	whenchanged = 3224766394;	visual V1 {		center = (306, 294);		height = 4;		};	};node VerbalRuleGeometric {	kind = NATURE;	discrete = TRUE;	chance = CHANCE;	states = (High, Medium, Low);	parents = (InduceRulesGeometric);	probs = 		// High          Medium        Low             // InduceRulesGeometric 		 ((0.89092761,   0.10840337,   0.00066902075), // High                 		  (0.16151614,   0.67696774,   0.16151614),    // Medium               		  (0.00066902075,0.10840337,   0.89092761));   // Low                  ;	numcases = 1;	whenchanged = 3224768382;	visual V1 {		center = (528, 252);		height = 5;		};	};node ExplicitGeometric {	kind = NATURE;	discrete = TRUE;	chance = CHANCE;	states = (High, Medium, Low);	parents = (AlgebraRuleGeometric);	probs = 		// High          Medium        Low             // AlgebraRuleGeometric 		 ((0.25825825,   0.45345345,   0.2882883),     // High                 		  (0.022502249,  0.190119,     0.78737873),    // Medium               		  (0.0003900429, 0.015301683,  0.9843083));    // Low                  ;	numcases = 1;	whenchanged = 3224767445;	visual V1 {		center = (210, 372);		height = 13;		};	};node RecursiveRuleGeometric {	kind = NATURE;	discrete = TRUE;	chance = CHANCE;	states = (High, Medium, Low);	parents = (AlgebraRuleGeometric);	probs = 		// High          Medium        Low             // AlgebraRuleGeometric 		 ((0.96419287,   0.034506902,  0.0013002601),  // High                 		  (0.6726,       0.2783,       0.0491),        // Medium               		  (0.182,        0.4354,       0.3826));       // Low                  ;	numcases = 1;	whenchanged = 3224767904;	visual V1 {		center = (420, 366);		height = 3;		link 1 {			path = ((349, 321), (378, 339));			};		};	};};