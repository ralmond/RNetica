// ~->[DNET-1]->~

// File created by an unlicensed user using Netica 5.04 on 04/09/2019 at 06:09:56 PM.

bnet GeometricMotif {
autoupdate = FALSE;
whenchanged = 1554847748;

visual V1 {
	defdispform = BELIEFBARS;
	nodelabeling = TITLE;
	NodeMaxNumEntries = 50;
	nodefont = font {shape= "Arial"; size= 10;};
	linkfont = font {shape= "Arial"; size= 9;};
	windowposn = (368, 195, 1229, 809);
	resolution = 72;
	drawingbounds = (1104, 728);
	showpagebreaks = FALSE;
	usegrid = TRUE;
	gridspace = (6, 6);
	NodeSet Node {BuiltIn = 1; Color = 0x00E1E1E1;};
	NodeSet Nature {BuiltIn = 1; Color = 0x00F8EED2;};
	NodeSet Deterministic {BuiltIn = 1; Color = 0x00D3CAA6;};
	NodeSet Finding {BuiltIn = 1; Color = 0x00C8C8C8;};
	NodeSet Constant {BuiltIn = 1; Color = 0x00FFFFFF;};
	NodeSet ConstantValue {BuiltIn = 1; Color = 0x00FFFFB4;};
	NodeSet Utility {BuiltIn = 1; Color = 0x00FFBDBD;};
	NodeSet Decision {BuiltIn = 1; Color = 0x00DEE8FF;};
	NodeSet Documentation {BuiltIn = 1; Color = 0x00F0FAFA;};
	NodeSet Title {BuiltIn = 1; Color = 0x00FFFFFF;};
	NodeSet Observables {Disabled = 1; Color = 0x00C8C8C8;};
	NodeSet Proficiencies {Disabled = 1; Color = 0x00C8C8C8;};
	PrinterSetting A {
		margins = (1270, 1270, 1270, 1270);
		};
	};

node SolveGeometricProblems {
	kind = NATURE;
	discrete = TRUE;
	chance = CHANCE;
	states = (High, Medium, Low);
	parents = ();
	probs = 
		// High         Medium       Low          
		  (0.1532,      0.2784,      0.5684);
	whenchanged = 2147483647;
	visual V1 {
		center = (354, 42);
		height = 1;
		};
	};

node CommonRatio {
	kind = NATURE;
	discrete = TRUE;
	chance = CHANCE;
	states = (High, Medium, Low);
	parents = (SolveGeometricProblems);
	probs = 
		// High         Medium       Low           // SolveGeometricProblems 
		  (1,           0,           0,            // High                   
		   0.963,       0.036,       9.999424e-4,  // Medium                 
		   0.567,       0.379,       0.05399996);  // Low                    ;
	numcases = 1;
	whenchanged = 2147483647;
	visual V1 {
		center = (114, 132);
		height = 5;
		link 1 {
			path = ((283, 69), (177, 109));
			};
		};
	};

node VisualGeometric {
	kind = NATURE;
	discrete = TRUE;
	chance = CHANCE;
	states = (High, Medium, Low);
	parents = (SolveGeometricProblems);
	probs = 
		// High         Medium       Low           // SolveGeometricProblems 
		  (0.749,       0.211,       0.04,         // High                   
		   0.295,       0.41,        0.295,        // Medium                 
		   0.04,        0.211,       0.749);       // Low                    ;
	numcases = 1;
	whenchanged = 2147483647;
	visual V1 {
		center = (672, 90);
		height = 8;
		link 1 {
			path = ((427, 53), (609, 81));
			};
		};
	};

node TableGeometric {
	kind = NATURE;
	discrete = TRUE;
	chance = CHANCE;
	states = (High, Medium, Low);
	parents = (SolveGeometricProblems);
	probs = 
		// High         Medium       Low           // SolveGeometricProblems 
		  (0.713,       0.216,       0.071,        // High                   
		   0.326,       0.348,       0.326,        // Medium                 
		   0.071,       0.216,       0.713);       // Low                    ;
	numcases = 
		                 // SolveGeometricProblems 
		  (1,            // High                   
		   1,            // Medium                 
		   1);           // Low                    ;
	whenchanged = 2147483647;
	visual V1 {
		center = (588, 186);
		height = 7;
		link 1 {
			path = ((398, 69), (545, 159));
			};
		};
	};

node InduceRulesGeometric {
	kind = NATURE;
	discrete = TRUE;
	chance = CHANCE;
	states = (High, Medium, Low);
	parents = (SolveGeometricProblems);
	probs = 
		// High         Medium       Low           // SolveGeometricProblems 
		  (0.395,       0.396,       0.209,        // High                   
		   0.07,        0.275,       0.655,        // Medium                 
		   0.004,       0.05,        0.946);       // Low                    ;
	numcases = 1;
	whenchanged = 2147483647;
	visual V1 {
		center = (342, 216);
		height = 6;
		link 1 {
			path = ((352, 69), (343, 189));
			};
		};
	};

node CREasy {
	kind = NATURE;
	discrete = TRUE;
	chance = CHANCE;
	states = (True, False);
	inputs = (theta);
	parents = (CommonRatio);
	probs = 
		// True         False         // theta  
		  (0.8773,      0.1227,       // High   
		   0.7311,      0.2689,       // Medium 
		   0.508,       0.492);       // Low    ;
	title = "Common Ratio Easy Task";
	comment = "Is response \"correct\", Easy task, three level parent.  IRT difficulty -1.";
	whenchanged = 2147483647;
	visual V1 {
		center = (91, 462);
		height = 11;
		};
	};

node X3Medium {
	kind = NATURE;
	discrete = TRUE;
	chance = CHANCE;
	states = (True, False);
	inputs = (theta);
	parents = (CommonRatio);
	probs = 
		// True         False         // theta  
		  (0.7246,      0.2754,       // High   
		   0.5,         0.5,          // Medium 
		   0.2754,      0.7246);      // Low    ;
	title = "Common Ratio Medium Task";
	comment = "Is response \"correct\", Easy task, three level parent.  IRT difficulty 0.";
	whenchanged = 2147483647;
	visual V1 {
		center = (101, 516);
		height = 10;
		};
	};

node X3Hard {
	kind = NATURE;
	discrete = TRUE;
	chance = CHANCE;
	states = (True, False);
	inputs = (theta);
	parents = (CommonRatio);
	probs = 
		// True         False         // theta  
		  (0.4918,      0.5082,       // High   
		   0.2689,      0.7311,       // Medium 
		   0.1227,      0.8773);      // Low    ;
	title = "Common Ratio Hard Task";
	comment = "Is response \"correct\", Hard task, three level parent.  IRT difficulty 1.";
	whenchanged = 2147483647;
	visual V1 {
		center = (91, 570);
		height = 12;
		};
	};

node X3Easy {
	kind = NATURE;
	discrete = TRUE;
	chance = CHANCE;
	states = (True, False);
	inputs = (theta);
	parents = (VisualGeometric);
	probs = 
		// True         False         // theta  
		  (0.8773,      0.1227,       // High   
		   0.7311,      0.2689,       // Medium 
		   0.508,       0.492);       // Low    ;
	title = "Visual Easy Task";
	comment = "Is response \"correct\", Easy task, three level parent.  IRT difficulty -1.";
	whenchanged = 2147483647;
	visual V1 {
		center = (702, 348);
		height = 13;
		};
	};

node X3Medium1 {
	kind = NATURE;
	discrete = TRUE;
	chance = CHANCE;
	states = (True, False);
	inputs = (theta);
	parents = (VisualGeometric);
	probs = 
		// True         False         // theta  
		  (0.7246,      0.2754,       // High   
		   0.5,         0.5,          // Medium 
		   0.2754,      0.7246);      // Low    ;
	title = "Visual Medium Task";
	comment = "Is response \"correct\", Easy task, three level parent.  IRT difficulty 0.";
	whenchanged = 2147483647;
	visual V1 {
		center = (762, 408);
		height = 15;
		};
	};

node X3Hard1 {
	kind = NATURE;
	discrete = TRUE;
	chance = CHANCE;
	states = (True, False);
	inputs = (theta);
	parents = (VisualGeometric);
	probs = 
		// True         False         // theta  
		  (0.4918,      0.5082,       // High   
		   0.2689,      0.7311,       // Medium 
		   0.1227,      0.8773);      // Low    ;
	title = "Visual Hard Task";
	comment = "Is response \"correct\", Hard task, three level parent.  IRT difficulty 1.";
	whenchanged = 2147483647;
	visual V1 {
		center = (666, 486);
		height = 14;
		};
	};

node AlgebraRuleGeometric {
	kind = NATURE;
	discrete = TRUE;
	chance = CHANCE;
	states = (High, Medium, Low);
	parents = (InduceRulesGeometric);
	probs = 
		// High         Medium       Low           // InduceRulesGeometric 
		  (0.1589416,   0.4232342,   0.4178242,    // High                 
		   0.009290083, 0.116352,    0.8743579,    // Medium               
		   1.04e-4,     0.006073,    0.993823);    // Low                  ;
	whenchanged = 2147483647;
	visual V1 {
		center = (306, 294);
		height = 3;
		};
	};

node VerbalRuleGeometric {
	kind = NATURE;
	discrete = TRUE;
	chance = CHANCE;
	states = (High, Medium, Low);
	parents = (InduceRulesGeometric);
	probs = 
		// High         Medium       Low           // InduceRulesGeometric 
		  (0.8909276,   0.1084034,   6.690208e-4,  // High                 
		   0.1615161,   0.6769677,   0.1615161,    // Medium               
		   6.690208e-4, 0.1084034,   0.8909276);   // Low                  ;
	numcases = 1;
	whenchanged = 2147483647;
	visual V1 {
		center = (528, 252);
		height = 4;
		};
	};

node ExplicitGeometric {
	kind = NATURE;
	discrete = TRUE;
	chance = CHANCE;
	states = (High, Medium, Low);
	parents = (AlgebraRuleGeometric);
	probs = 
		// High         Medium       Low           // AlgebraRuleGeometric 
		  (0.2582583,   0.4534535,   0.2882883,    // High                 
		   0.02250225,  0.190119,    0.7873787,    // Medium               
		   3.900429e-4, 0.01530168,  0.9843083);   // Low                  ;
	numcases = 1;
	whenchanged = 2147483647;
	visual V1 {
		center = (210, 372);
		height = 9;
		};
	};

node RecursiveRuleGeometric {
	kind = NATURE;
	discrete = TRUE;
	chance = CHANCE;
	states = (High, Medium, Low);
	parents = (AlgebraRuleGeometric);
	probs = 
		// High         Medium       Low           // AlgebraRuleGeometric 
		  (0.9641929,   0.0345069,   0.00130026,   // High                 
		   0.6726,      0.2783,      0.0491,       // Medium               
		   0.182,       0.4354,      0.3826);      // Low                  ;
	numcases = 1;
	whenchanged = 2147483647;
	visual V1 {
		center = (420, 366);
		height = 2;
		link 1 {
			path = ((349, 321), (378, 339));
			};
		};
	};
NodeSet Observables {Nodes = (CREasy, X3Medium, X3Hard, X3Easy, X3Medium1, X3Hard1);};
NodeSet Proficiencies {Nodes = (SolveGeometricProblems, CommonRatio, VisualGeometric, TableGeometric, InduceRulesGeometric, AlgebraRuleGeometric, VerbalRuleGeometric, ExplicitGeometric, RecursiveRuleGeometric);};
};
